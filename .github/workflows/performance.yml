# Performance regression testing for rangebar algorithm
name: Performance Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily performance checks at 02:00 UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  performance-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install benchmark dependencies
      run: |
        chmod +x scripts/benchmark_runner.sh
        
    - name: Run performance validation
      run: |
        ./scripts/benchmark_runner.sh validate
        
    - name: Run benchmarks
      run: |
        cargo bench --bench rangebar_bench
        
    - name: Performance targets verification
      run: |
        echo "🎯 Performance targets:"
        echo "• 1M ticks processing: < 100ms"
        echo "• 1B ticks processing: < 30 seconds"
        echo "ℹ️  Detailed performance analysis requires manual review"

  performance-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        
    - name: Setup benchmark runner
      run: chmod +x scripts/benchmark_runner.sh
        
    - name: Create baseline from main
      run: |
        git checkout origin/main
        ./scripts/benchmark_runner.sh baseline
        
    - name: Test current performance
      run: |
        git checkout ${{ github.sha }}
        ./scripts/benchmark_runner.sh compare
        
    - name: Performance regression check
      run: |
        echo "⚠️  Performance regression detection requires additional tooling"
        echo "📊 Manual comparison recommended for critical changes"